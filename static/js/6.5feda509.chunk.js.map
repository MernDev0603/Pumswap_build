{"version":3,"sources":["views/Teams/components/TeamListCard.tsx","views/Teams/index.tsx","state/teams/hooks.ts","views/Teams/components/NoProfileCard.tsx","views/Teams/components/TeamHeader.tsx"],"names":["TeamRank","styled","div","theme","isDark","getBackground","Body","mediaQueries","md","Info","Avatar","img","TeamName","Heading","attrs","as","MobileAvatar","DesktopAvatar","StyledTeamCard","Card","TeamCard","rank","team","t","useTranslation","avatar","src","images","alt","id","bold","fontSize","alignItems","mb","name","color","pr","description","width","mr","style","alignSelf","points","toLocaleString","ml","users","Link","to","variant","scale","Teams","useTeams","teams","isLoading","teamList","Object","values","topTeams","orderBy","Page","TeamHeader","justifyContent","spin","map","index","TeamListCard","useTeam","useSelector","state","data","dispatch","useAppDispatch","useEffect","fetchTeam","isInitialized","fetchTeams","NoProfileCard","isActive","flexDirection","mt","HeaderWrapper","colors","textSubtle","useProfile","profile","showProfileCallout"],"mappings":"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","file":"static/js/6.5feda509.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled, { DefaultTheme } from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Card, CommunityIcon, Flex, Heading, PrizeIcon, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Team } from 'config/constants/types'\r\n\r\ninterface TeamCardProps {\r\n  rank: number\r\n  team: Team\r\n}\r\n\r\nconst getBackground = (theme: DefaultTheme) => {\r\n  if (theme.isDark) {\r\n    return 'linear-gradient(139.73deg, #142339 0%, #24243D 47.4%, #37273F 100%)'\r\n  }\r\n\r\n  return 'linear-gradient(139.73deg, #E6FDFF 0%, #EFF4F5 46.87%, #F3EFFF 100%)'\r\n}\r\n\r\nconst TeamRank = styled.div`\r\n  align-self: stretch;\r\n  background: ${({ theme }) => getBackground(theme)};\r\n  flex: none;\r\n  padding: 16px 0;\r\n  text-align: center;\r\n  width: 56px;\r\n`\r\n\r\nconst Body = styled.div`\r\n  align-items: start;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  padding: 24px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    align-items: center;\r\n    flex-direction: row;\r\n    font-size: 40px;\r\n  }\r\n`\r\n\r\nconst Info = styled.div`\r\n  flex: 1;\r\n`\r\n\r\nconst Avatar = styled.img`\r\n  border-radius: 50%;\r\n`\r\n\r\nconst TeamName = styled(Heading).attrs({ as: 'h3' })`\r\n  font-size: 24px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    font-size: 40px;\r\n  }\r\n`\r\n\r\nconst MobileAvatar = styled.div`\r\n  flex: none;\r\n  margin-right: 8px;\r\n\r\n  ${Avatar} {\r\n    height: 64px;\r\n    width: 64px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst DesktopAvatar = styled.div`\r\n  display: none;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: block;\r\n    margin-left: 24px;\r\n\r\n    ${Avatar} {\r\n      height: 128px;\r\n      width: 128px;\r\n    }\r\n  }\r\n`\r\n\r\nconst StyledTeamCard = styled(Card)`\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst TeamCard: React.FC<TeamCardProps> = ({ rank, team }) => {\r\n  const { t } = useTranslation()\r\n  const avatar = <Avatar src={`/images/teams/${team.images.md}`} alt=\"team avatar\" />\r\n\r\n  return (\r\n    <StyledTeamCard id={`team-${team.id}`}>\r\n      <Flex>\r\n        <TeamRank>\r\n          <Text bold fontSize=\"24px\">\r\n            {rank}\r\n          </Text>\r\n        </TeamRank>\r\n        <Body>\r\n          <Info>\r\n            <Flex alignItems=\"center\" mb=\"16px\">\r\n              <MobileAvatar>{avatar}</MobileAvatar>\r\n              <TeamName>{team.name}</TeamName>\r\n            </Flex>\r\n            <Text as=\"p\" color=\"textSubtle\" pr=\"24px\" mb=\"16px\">\r\n              {t(team.description)}\r\n            </Text>\r\n            <Flex>\r\n              <Flex>\r\n                {/* alignSelf for Safari fix */}\r\n                <PrizeIcon width=\"24px\" mr=\"8px\" style={{ alignSelf: 'center' }} />\r\n                <Text fontSize=\"24px\" bold>\r\n                  {team.points.toLocaleString()}\r\n                </Text>\r\n              </Flex>\r\n              <Flex ml=\"24px\">\r\n                {/* alignSelf for Safari fix */}\r\n                <CommunityIcon width=\"24px\" mr=\"8px\" style={{ alignSelf: 'center' }} />\r\n                <Text fontSize=\"24px\" bold>\r\n                  {team.users.toLocaleString()}\r\n                </Text>\r\n              </Flex>\r\n            </Flex>\r\n          </Info>\r\n          <Button as={Link} to={`/teams/${team?.id}`} variant=\"secondary\" scale=\"sm\">\r\n            {t('See More')}\r\n          </Button>\r\n          <DesktopAvatar>{avatar}</DesktopAvatar>\r\n        </Body>\r\n      </Flex>\r\n    </StyledTeamCard>\r\n  )\r\n}\r\n\r\nexport default TeamCard\r\n","import React from 'react'\r\nimport { AutoRenewIcon, Flex, Heading } from '@pancakeswap/uikit'\r\nimport orderBy from 'lodash/orderBy'\r\nimport { useTeams } from 'state/teams/hooks'\r\nimport Page from 'components/Layout/Page'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport TeamListCard from './components/TeamListCard'\r\nimport TeamHeader from './components/TeamHeader'\r\n\r\nconst Teams = () => {\r\n  const { t } = useTranslation()\r\n  const { teams, isLoading } = useTeams()\r\n  const teamList = Object.values(teams)\r\n  const topTeams = orderBy(teamList, ['points', 'id', 'name'], ['desc', 'asc', 'asc'])\r\n\r\n  return (\r\n    <Page>\r\n      <TeamHeader />\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"32px\">\r\n        <Heading scale=\"xl\">{t('Teams')}</Heading>\r\n        {isLoading && <AutoRenewIcon spin />}\r\n      </Flex>\r\n      {topTeams.map((team, index) => (\r\n        <TeamListCard key={team.id} rank={index + 1} team={team} />\r\n      ))}\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Teams\r\n","import { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useAppDispatch } from 'state'\r\nimport { Team } from 'config/constants/types'\r\nimport { State, TeamsState } from '../types'\r\nimport { fetchTeam, fetchTeams } from '.'\r\n\r\nexport const useTeam = (id: number) => {\r\n  const team: Team = useSelector((state: State) => state.teams.data[id])\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTeam(id))\r\n  }, [id, dispatch])\r\n\r\n  return team\r\n}\r\n\r\nexport const useTeams = () => {\r\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTeams())\r\n  }, [dispatch])\r\n\r\n  return { teams: data, isInitialized, isLoading }\r\n}\r\n","import React from 'react'\r\nimport { Button, Card, CardBody, Flex, Heading, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst NoProfileCard = () => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Card mb=\"32px\" isActive>\r\n      <CardBody>\r\n        <Flex\r\n          alignItems={['start', null, 'center']}\r\n          justifyContent={['start', null, 'space-between']}\r\n          flexDirection={['column', null, 'row']}\r\n        >\r\n          <div>\r\n            <Heading scale=\"lg\" mb=\"8px\">\r\n              {t('You haven’t set up your profile yet!')}\r\n            </Heading>\r\n            <Text>{t('You can do this at any time by clicking on your profile picture in the menu')}</Text>\r\n          </div>\r\n          <Button as={Link} to=\"/create-profile\" id=\"teamsPageSetUpProfile\" mt={['16px', null, 0]}>\r\n            {t('Set up now')}\r\n          </Button>\r\n        </Flex>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default NoProfileCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Text } from '@pancakeswap/uikit'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport NoProfileCard from './NoProfileCard'\r\n\r\nconst HeaderWrapper = styled.div`\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\r\n  margin-bottom: 24px;\r\n  padding-bottom: 24px;\r\n`\r\n\r\nconst TeamHeader = () => {\r\n  const { t } = useTranslation()\r\n  const { isInitialized, profile } = useProfile()\r\n  const showProfileCallout = isInitialized && !profile\r\n\r\n  return (\r\n    <>\r\n      {showProfileCallout && <NoProfileCard />}\r\n      <HeaderWrapper>\r\n        <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\">\r\n          {t('Teams & Profiles')}\r\n        </Heading>\r\n        <Text bold>\r\n          {t('Show off your stats and collectibles with your unique profile. Team features will be revealed soon!')}\r\n        </Text>\r\n      </HeaderWrapper>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TeamHeader\r\n"],"sourceRoot":""}