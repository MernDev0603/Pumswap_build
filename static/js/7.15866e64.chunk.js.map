{"version":3,"sources":["views/PoolFinder/index.tsx","components/Links/index.tsx"],"names":["Fields","StyledButton","styled","Button","theme","colors","input","text","PoolFinder","account","useActiveWeb3React","t","useTranslation","useState","TOKEN1","activeField","setActiveField","ETHER","currency0","setCurrency0","currency1","setCurrency1","usePair","undefined","pairState","pair","addPair","usePairAdder","useEffect","validPairNoLiquidity","PairState","NOT_EXISTS","Boolean","EXISTS","JSBI","equal","reserve0","raw","BigInt","reserve1","position","useTokenBalance","liquidityToken","hasPosition","greaterThan","handleCurrencySelect","useCallback","currency","TOKEN0","prerequisiteMessage","padding","style","textAlign","color","fontFamily","fontSize","useModal","onCurrencySelect","showCommonBases","selectedCurrency","onPresentCurrencyModal","src","alt","width","height","margin","title","subtitle","backTo","noConfig","helper","gap","onClick","display","justifyContent","marginLeft","symbol","as","Row","paddingLeft","endIcon","justifyItems","backgroundColor","borderRadius","to","justify","currencyId","INVALID","fontWeight","LOADING","StyledInternalLink","Link","primary"],"mappings":"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","file":"static/js/7.15866e64.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react'\r\nimport { Currency, ETHER, JSBI, TokenAmount } from '@pancakeswap/sdk'\r\nimport { Button, ChevronDownIcon, Text, AddIcon, useModal } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { LightCard } from '../../components/Card'\r\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\r\nimport { CurrencyLogo } from '../../components/Logo'\r\nimport { MinimalPositionCard } from '../../components/PositionCard'\r\nimport Row from '../../components/Layout/Row'\r\nimport CurrencySearchModal from '../../components/SearchModal/CurrencySearchModal'\r\nimport { PairState, usePair } from '../../hooks/usePairs'\r\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\r\nimport { usePairAdder } from '../../state/user/hooks'\r\nimport { useTokenBalance } from '../../state/wallet/hooks'\r\nimport StyledInternalLink from '../../components/Links'\r\nimport { currencyId } from '../../utils/currencyId'\r\nimport Dots from '../../components/Loader/Dots'\r\nimport { AppHeader, AppBody } from '../../components/App'\r\nimport Page from '../Page'\r\n\r\nenum Fields {\r\n  TOKEN0 = 0,\r\n  TOKEN1 = 1,\r\n}\r\n\r\nconst StyledButton = styled(Button)`\r\n  // background-color: ${({ theme }) => theme.colors.input};\r\n  background-color: rgb(5, 25, 90) !important;\r\n  // color: ${({ theme }) => theme.colors.text};\r\n  color: #fff !important;\r\n  box-shadow: none;\r\n  border-radius: 16px;\r\n`\r\n\r\nexport default function PoolFinder() {\r\n  const { account } = useActiveWeb3React()\r\n  const { t } = useTranslation()\r\n\r\n  const [activeField, setActiveField] = useState<number>(Fields.TOKEN1)\r\n  const [currency0, setCurrency0] = useState<Currency | null>(ETHER)\r\n  const [currency1, setCurrency1] = useState<Currency | null>(null)\r\n\r\n  const [pairState, pair] = usePair(currency0 ?? undefined, currency1 ?? undefined)\r\n  const addPair = usePairAdder()\r\n  useEffect(() => {\r\n    if (pair) {\r\n      addPair(pair)\r\n    }\r\n  }, [pair, addPair])\r\n\r\n  const validPairNoLiquidity: boolean =\r\n    pairState === PairState.NOT_EXISTS ||\r\n    Boolean(\r\n      pairState === PairState.EXISTS &&\r\n        pair &&\r\n        JSBI.equal(pair.reserve0.raw, JSBI.BigInt(0)) &&\r\n        JSBI.equal(pair.reserve1.raw, JSBI.BigInt(0)),\r\n    )\r\n\r\n  const position: TokenAmount | undefined = useTokenBalance(account ?? undefined, pair?.liquidityToken)\r\n  const hasPosition = Boolean(position && JSBI.greaterThan(position.raw, JSBI.BigInt(0)))\r\n\r\n  const handleCurrencySelect = useCallback(\r\n    (currency: Currency) => {\r\n      if (activeField === Fields.TOKEN0) {\r\n        setCurrency0(currency)\r\n      } else {\r\n        setCurrency1(currency)\r\n      }\r\n    },\r\n    [activeField],\r\n  )\r\n\r\n  const prerequisiteMessage = (\r\n    <LightCard padding=\"8px 10px\">\r\n      <Text \r\n      style={{\r\n        textAlign: \"center\",\r\n        color: '#04bbfb',\r\n        fontFamily: 'Poppins',\r\n        fontSize: '16px'\r\n      }}>\r\n        {!account ? t('Connect to a wallet to find pools') : t('Select a token to find your liquidity.')}\r\n      </Text>\r\n    </LightCard>\r\n  )\r\n\r\n  const [onPresentCurrencyModal] = useModal(\r\n    <CurrencySearchModal\r\n      onCurrencySelect={handleCurrencySelect}\r\n      showCommonBases\r\n      selectedCurrency={(activeField === Fields.TOKEN0 ? currency1 : currency0) ?? undefined}\r\n    />,\r\n    true,\r\n    true,\r\n    'selectCurrencyModal',\r\n  )\r\n\r\n  return (\r\n    <Page>\r\n      <img src='/logo_pum.png' alt='LOGO' style={{width: '20%', height: 'fit-content', margin: '10px 0 40px 0'}} />\r\n      <AppBody>\r\n        <AppHeader title={t('Import Pool')} subtitle={t('')} backTo=\"/pool\" noConfig = 'false' \r\n          helper='Use this tool to find pairs that do not automatically appear in the interface.'\r\n        />\r\n        <AutoColumn style={{ padding: '3rem' }} gap=\"md\">\r\n          <StyledButton\r\n            onClick={() => {\r\n              onPresentCurrencyModal()\r\n              setActiveField(Fields.TOKEN0)\r\n            }}\r\n            style={{display: \"flex\", justifyContent: 'center'}}\r\n          >\r\n            {currency0 ? (\r\n              <Row style={{ display: 'flex', justifyContent: 'center'}}>\r\n                <CurrencyLogo currency={currency0} />\r\n                <Text style={{\r\n                  color: '#fff',\r\n                  fontFamily: 'Poppins',\r\n                  marginLeft: '8px',\r\n                }}>{currency0.symbol}</Text>\r\n                <ChevronDownIcon color='#fff' />\r\n              </Row>\r\n            ) : (\r\n              <Row style={{ display: 'flex', justifyContent: 'center', width: 'auto'}}>\r\n                <Text as={Row} style={{\r\n                  color: '#fff',\r\n                  fontFamily: 'Poppins',\r\n                  paddingLeft: '33px'\r\n                }}>{t('Select a Token')}</Text>\r\n                <ChevronDownIcon color='#fff' />\r\n              </Row>\r\n            )}\r\n          </StyledButton>\r\n\r\n          <ColumnCenter>\r\n            <AddIcon />\r\n          </ColumnCenter>\r\n\r\n          <StyledButton\r\n            endIcon={<ChevronDownIcon />}\r\n            onClick={() => {\r\n              onPresentCurrencyModal()\r\n              setActiveField(Fields.TOKEN1)\r\n            }}\r\n          >\r\n            {currency1 ? (\r\n              <Row style={{ display: 'flex', justifyContent: 'center'}}>\r\n                <CurrencyLogo currency={currency1} />\r\n                <Text style={{\r\n                color: '#fff',\r\n                marginLeft: '8px',\r\n                fontFamily: 'Poppins',\r\n                display: 'flex',\r\n                justifyContent: 'center'\r\n              }}>{currency1.symbol}</Text>\r\n              <ChevronDownIcon color='#fff' />\r\n              </Row>\r\n            ) : (\r\n              <Row style={{ display: 'flex', justifyContent: 'center', width: 'auto'}}>\r\n                <Text as={Row} style={{\r\n                  color: '#fff',\r\n                  fontFamily: 'Poppins',\r\n                  paddingLeft: '33px'\r\n                }}>{t('Select a Token')}</Text>\r\n                <ChevronDownIcon color='#fff' />\r\n              </Row>\r\n            )}\r\n          </StyledButton>\r\n\r\n          {hasPosition && (\r\n            <ColumnCenter\r\n              style={{ justifyItems: 'center', backgroundColor: '', padding: '12px 0px', borderRadius: '12px' }}\r\n            >\r\n              <Text textAlign=\"center\">{t('Pool Found!')}</Text>\r\n              <StyledInternalLink to=\"/pool\">\r\n                <Text textAlign=\"center\">{t('Manage this pool.')}</Text>\r\n              </StyledInternalLink>\r\n            </ColumnCenter>\r\n          )}\r\n\r\n          {currency0 && currency1 ? (\r\n            pairState === PairState.EXISTS ? (\r\n              hasPosition && pair ? (\r\n                <MinimalPositionCard pair={pair} />\r\n              ) : (\r\n                <LightCard padding=\"45px 10px\">\r\n                  <AutoColumn gap=\"sm\" justify=\"center\">\r\n                    <Text style={{\r\n                      textAlign: \"center\",\r\n                      color: '#04bbfb',\r\n                      fontFamily: 'Poppins',\r\n                      fontSize: '16px'\r\n                    }}>{t('You don’t have liquidity in this pool yet.')}</Text>\r\n                    <StyledInternalLink to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}>\r\n                      <Text style={{\r\n                      textAlign: \"center\",\r\n                      color: '#04bbfb',\r\n                      fontFamily: 'Poppins',\r\n                      fontSize: '16px'\r\n                    }}>{t('Add Liquidity')}</Text>\r\n                    </StyledInternalLink>\r\n                  </AutoColumn>\r\n                </LightCard>\r\n              )\r\n            ) : validPairNoLiquidity ? (\r\n              <LightCard padding=\"45px 10px\">\r\n                <AutoColumn gap=\"sm\" justify=\"center\">\r\n                  <Text textAlign=\"center\">{t('No pool found.')}</Text>\r\n                  <StyledInternalLink to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}>\r\n                    {t('Create pool.')}\r\n                  </StyledInternalLink>\r\n                </AutoColumn>\r\n              </LightCard>\r\n            ) : pairState === PairState.INVALID ? (\r\n              <LightCard padding=\"45px 10px\">\r\n                <AutoColumn gap=\"sm\" justify=\"center\">\r\n                  <Text textAlign=\"center\" fontWeight={500}>\r\n                    {t('Invalid pair.')}\r\n                  </Text>\r\n                </AutoColumn>\r\n              </LightCard>\r\n            ) : pairState === PairState.LOADING ? (\r\n              <LightCard padding=\"45px 10px\">\r\n                <AutoColumn gap=\"sm\" justify=\"center\">\r\n                  <Text \r\n                  style={{\r\n                      textAlign: \"center\",\r\n                      color: '#04bbfb',\r\n                      fontFamily: 'Poppins',\r\n                      fontSize: '16px'\r\n                    }}>\r\n                    {t('Loading')}\r\n                    <Dots />\r\n                  </Text>\r\n                </AutoColumn>\r\n              </LightCard>\r\n            ) : null\r\n          ) : (\r\n            prerequisiteMessage\r\n          )}\r\n        </AutoColumn>\r\n\r\n        {/* <CurrencySearchModal\r\n          isOpen={showSearch}\r\n          onCurrencySelect={handleCurrencySelect}\r\n          onDismiss={handleSearchDismiss}\r\n          showCommonBases\r\n          selectedCurrency={(activeField === Fields.TOKEN0 ? currency1 : currency0) ?? undefined}\r\n        /> */}\r\n      </AppBody>\r\n    </Page>\r\n  )\r\n}\r\n","import { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\n\r\n// An internal link from the react-router-dom library that is correctly styled\r\nconst StyledInternalLink = styled(Link)`\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  font-weight: 500;\r\n\r\n  :hover {\r\n    text-decoration: underline;\r\n  }\r\n\r\n  :focus {\r\n    outline: none;\r\n    text-decoration: underline;\r\n  }\r\n\r\n  :active {\r\n    text-decoration: none;\r\n  }\r\n`\r\n\r\nexport default StyledInternalLink\r\n"],"sourceRoot":""}