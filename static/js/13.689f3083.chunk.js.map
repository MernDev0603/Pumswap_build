{"version":3,"sources":["views/Pool/index.tsx"],"names":["Body","styled","CardBody","theme","colors","dropdownDeep","Pool","account","useActiveWeb3React","t","useTranslation","trackedTokenPairs","useTrackedTokenPairs","tokenPairsWithLiquidityTokens","useMemo","map","tokens","liquidityToken","toV2LiquidityToken","liquidityTokens","tpwlt","useTokenBalancesWithLoadingIndicator","undefined","v2PairsBalances","fetchingV2PairBalances","liquidityTokensWithBalances","filter","address","greaterThan","v2Pairs","usePairs","v2IsLoading","length","some","V2Pair","allV2PairsWithLiquidity","v2Pair","Boolean","style","color","fontFamily","fontSize","fontWeight","margin","title","subtitle","noConfig","id","as","Link","to","display","alignItems","textAlign","padding","letterSpacing","borderRadius","background","height","position","top","right","flexDirection","justifyContent","marginLeft","text","placement","ml","mr","index","pair","mb","mt","cursor","marginTop","marginBottom"],"mappings":"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","file":"static/js/13.689f3083.chunk.js","sourcesContent":["import React, { useMemo } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Pair } from '@pancakeswap/sdk'\r\nimport { Text, Flex, CardBody, CardFooter, Button, AddIcon } from '@pancakeswap/uikit'\r\nimport { Link } from 'react-router-dom'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport FullPositionCard from '../../components/PositionCard'\r\nimport { useTokenBalancesWithLoadingIndicator } from '../../state/wallet/hooks'\r\nimport { usePairs } from '../../hooks/usePairs'\r\nimport { toV2LiquidityToken, useTrackedTokenPairs } from '../../state/user/hooks'\r\nimport Dots from '../../components/Loader/Dots'\r\nimport { AppHeader, AppBody } from '../../components/App'\r\nimport Page from '../Page'\r\nimport QuestionHelper from '../../components/QuestionHelper'\r\n// import Logo from \"./logo_Pum.png\"\r\n\r\nconst Body = styled(CardBody)`\r\n  // background-color: ${({ theme }) => theme.colors.dropdownDeep};\r\n  background-color: #fff; //K_K\r\n`\r\n\r\nexport default function Pool() {\r\n  const { account } = useActiveWeb3React()\r\n  const { t } = useTranslation()\r\n\r\n  // fetch the user's balances of all tracked V2 LP tokens\r\n  const trackedTokenPairs = useTrackedTokenPairs()\r\n  const tokenPairsWithLiquidityTokens = useMemo(\r\n    () => trackedTokenPairs.map((tokens) => ({ liquidityToken: toV2LiquidityToken(tokens), tokens })),\r\n    [trackedTokenPairs],\r\n  )\r\n  const liquidityTokens = useMemo(\r\n    () => tokenPairsWithLiquidityTokens.map((tpwlt) => tpwlt.liquidityToken),\r\n    [tokenPairsWithLiquidityTokens],\r\n  )\r\n  const [v2PairsBalances, fetchingV2PairBalances] = useTokenBalancesWithLoadingIndicator(\r\n    account ?? undefined,\r\n    liquidityTokens,\r\n  )\r\n\r\n  // fetch the reserves for all V2 pools in which the user has a balance\r\n  const liquidityTokensWithBalances = useMemo(\r\n    () =>\r\n      tokenPairsWithLiquidityTokens.filter(({ liquidityToken }) =>\r\n        v2PairsBalances[liquidityToken.address]?.greaterThan('0'),\r\n      ),\r\n    [tokenPairsWithLiquidityTokens, v2PairsBalances],\r\n  )\r\n\r\n  const v2Pairs = usePairs(liquidityTokensWithBalances.map(({ tokens }) => tokens))\r\n  const v2IsLoading =\r\n    fetchingV2PairBalances || v2Pairs?.length < liquidityTokensWithBalances.length || v2Pairs?.some((V2Pair) => !V2Pair)\r\n\r\n  const allV2PairsWithLiquidity = v2Pairs.map(([, pair]) => pair).filter((v2Pair): v2Pair is Pair => Boolean(v2Pair))\r\n\r\n  const renderBody = () => {\r\n    if (!account) {\r\n      return (\r\n        <Text color=\"#bdc2c4\" fontSize=\"16px\" fontWeight=\"400\" fontFamily=\"Poppins\" textAlign=\"center\">\r\n          {t('Connect to a wallet to view your liquidity.')}\r\n        </Text>\r\n      )\r\n    }\r\n    if (v2IsLoading) {\r\n      return (\r\n        <Text color=\"#bdc2c4\" fontSize=\"16px\" fontWeight=\"400\" fontFamily=\"Poppins\" textAlign=\"center\">\r\n          <Dots>{t('Loading')}</Dots>\r\n        </Text>\r\n      )\r\n    }\r\n    if (allV2PairsWithLiquidity?.length > 0) {\r\n      return allV2PairsWithLiquidity.map((v2Pair, index) => (\r\n        <FullPositionCard\r\n          key={v2Pair.liquidityToken.address}\r\n          pair={v2Pair}\r\n          mb={index < allV2PairsWithLiquidity.length - 1 ? '16px' : 0}\r\n        />\r\n      ))\r\n    }\r\n    return (\r\n      <Text color=\"#bdc2c4\" fontSize=\"16px\" fontWeight=\"400\" fontFamily=\"Poppins\" textAlign=\"center\">\r\n        {t('No liquidity found.')}\r\n      </Text>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Page>\r\n      <Text\r\n        style={{\r\n          color: '#fff',\r\n          fontFamily: 'Poppins',\r\n          fontSize: '40px',\r\n          fontWeight: 'bolder',\r\n          margin: '0 0 40px 0',\r\n        }}\r\n      >\r\n        Pum Swap\r\n      </Text>\r\n      {/* <img src='/logo_Pum.png' alt='LOGO' style={{width: '20%', margin: '10px 0 40px 0'}} /> */}\r\n      {/* <img src={Logo} alt='LOGO' style={{width: '20%', margin: '10px 0 40px 0'}} /> */}\r\n      <AppBody style={{ margin: '20px' }}>\r\n        <AppHeader title={t('Liquidity')} subtitle={t('')} noConfig=\"false\" />\r\n        <Body>\r\n          <Button\r\n            id=\"join-pool-button\"\r\n            as={Link}\r\n            to=\"/add\"\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              textAlign: 'center',\r\n              padding: '20px 8px',\r\n              letterSpacing: '0.03em',\r\n              borderRadius: '20px',\r\n              background: '#05195a',\r\n              fontWeight: 500,\r\n              fontFamily: 'Poppins',\r\n              height: '30px',\r\n              position: 'absolute',\r\n              top: 33,\r\n              right: 36,\r\n            }}\r\n          >\r\n            {t('Add Liquidity')}\r\n          </Button>\r\n          <Flex flexDirection=\"column\" style={{ padding: '10px 15px' }}>\r\n            <Flex justifyContent=\"space-between\" alignItems=\"center\" style={{ margin: '10px 0 15px 0' }}>\r\n              <Text\r\n                style={{\r\n                  color: '#04bbfb',\r\n                  fontSize: '16px',\r\n                  fontWeight: 400,\r\n                  fontFamily: 'Poppins',\r\n                  marginLeft: '10px',\r\n                }}\r\n              >\r\n                {t('Your Liquidity')}\r\n              </Text>\r\n              <QuestionHelper\r\n                text={t(\r\n                  'When you add liquidity, you are given pool tokens that represent your share. If you donot see a pool you joined in this list, try importing a pool below.',\r\n                )}\r\n                placement=\"left\"\r\n                ml=\"4px\"\r\n                mr=\"10px\"\r\n              />\r\n            </Flex>\r\n            {renderBody()}\r\n            <Flex alignItems=\"baseline\" mt=\"20px\">\r\n              <Text\r\n                style={{\r\n                  color: '#05195a',\r\n                  fontSize: '14px',\r\n                  fontWeight: 400,\r\n                  fontFamily: 'Poppins',\r\n                }}\r\n              >\r\n                {t(\"Don't see a pool you joined?\")}\r\n              </Text>\r\n              <Link\r\n                id=\"import-pool-link\"\r\n                as={Link}\r\n                to=\"/find\"\r\n                style={{\r\n                  color: '#04bbfb',\r\n                  fontWeight: 600,\r\n                  cursor: 'pointer',\r\n                  fontFamily: 'Poppins',\r\n                  fontSize: '14px',\r\n                  marginLeft: '5px',\r\n                }}\r\n              >\r\n                {t('Import it')}\r\n              </Link>\r\n            </Flex>\r\n            <Text\r\n              style={{\r\n                color: '#05195a',\r\n                fontSize: '14px',\r\n                fontWeight: 400,\r\n                fontFamily: 'Poppins',\r\n                marginTop: '15px',\r\n              }}\r\n            >\r\n              {t('Or, if you staked your LP tokens in a farm, unstake them to see them here.')}\r\n            </Text>\r\n            <Text\r\n              style={{\r\n                color: '#04bbfb',\r\n                fontSize: '14px',\r\n                fontWeight: 900,\r\n                fontFamily: 'Poppins',\r\n                cursor: 'pointer',\r\n                marginBottom: '10px',\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                marginTop: '20px',\r\n              }}\r\n            >\r\n              {t('How to add liquidity?')}\r\n            </Text>\r\n          </Flex>\r\n\r\n          {/* {account && !v2IsLoading && (\r\n            <Flex flexDirection=\"column\" alignItems=\"center\" mt=\"24px\">\r\n              <Text color=\"textSubtle\" mb=\"8px\">\r\n                {t(\"Don't see a pool you joined?\")}\r\n              </Text>\r\n              <Button id=\"import-pool-link\" variant=\"secondary\" scale=\"sm\" as={Link} to=\"/find\">\r\n                {t('Find other LP tokens')}\r\n              </Button>\r\n            </Flex>\r\n          )} */}\r\n        </Body>\r\n        {/* <CardFooter style={{ textAlign: 'center' }}>\r\n          <Button id=\"join-pool-button\" as={Link} to=\"/add\" width=\"100%\" startIcon={<AddIcon color=\"white\" />}>\r\n        </CardFooter> */}\r\n      </AppBody>\r\n    </Page>\r\n  )\r\n}\r\n"],"sourceRoot":""}